jobs:
# Matrix over VS 2022 (and eventually VS 2026)

- job: integrationtest
  displayName: ðŸ§ª Integration tests
  strategy:
    matrix:
      vs2022:
        vmImage: windows-2022
        currentSdk: true
  pool:
    vmImage: $[ variables['vmImage'] ]
  dependsOn: Windows
  steps:
  - checkout: self
    fetchDepth: 1 # no need for git history here
    clean: true
  - task: CopyFiles@2
    inputs:
      SourceFolder: integration-tests
      Contents: '**'
      TargetFolder: $(Pipeline.Workspace)/integration-tests
      Overwrite: true
    displayName: ðŸ”§ Copy integration tests out of the repo
  - download: current
    artifact: deployables-Windows
    displayName: ðŸ”» Download nupkg
  - pwsh: |
      $nupkg = (Get-ChildItem -Path $(Pipeline.Workspace)/deployables-Windows/NuGet -Filter *.nupkg)[0].Name
      if ($nupkg -match 'Microsoft\.Windows\.CsWin32\.(.+)\.nupkg') {
        $version = $Matches[1]
        Write-Host "Will consume Microsoft.Windows.CsWin32 $version"
        Write-Host "##vso[task.setvariable variable=NuGetPackageVersion]$version"
      }
    displayName: ðŸ”§ Consume nupkg
  - task: MSBuild@1
    displayName: ðŸ§ª MSBuild non-sdk style
    inputs:
      solution: $(Pipeline.Workspace)\integration-tests\nonsdk\nonsdk.csproj
      msbuildArguments: /r
  - task: MSBuild@1
    displayName: ðŸ§ª MSBuild sdk-style
    inputs:
      solution: $(Pipeline.Workspace)\integration-tests\sdk\sdk.csproj
      msbuildArguments: /r
    condition: eq(variables.currentSdk, 'true')
  - pwsh: dotnet build
    displayName: ðŸ§ª dotnet build
    workingDirectory: $(Pipeline.Workspace)\integration-tests\sdk
    condition: eq(variables.currentSdk, 'true')
  - task: MSBuild@1
    displayName: ðŸ§ª MSBuild buildtask-sdk-style
    inputs:
      solution: $(Pipeline.Workspace)\integration-tests\buildtask-sdk\buildtask-sdk.csproj
      msbuildArguments: /r
    condition: eq(variables.currentSdk, 'true')
  - pwsh: dotnet publish
    displayName: ðŸ§ª dotnet publish
    workingDirectory: $(Pipeline.Workspace)\integration-tests\buildtask-sdk
    condition: eq(variables.currentSdk, 'true')
