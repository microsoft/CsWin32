<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Microsoft.Windows.CsWin32.BuildTasks.CsWin32CodeGeneratorTask"
    AssemblyFile="$(GeneratorBuildTasksPath)Microsoft.Windows.CsWin32.BuildTasks.dll"
    TaskFactory="$(GeneratorBuildTasksTaskFactory)"/>

  <Target Name="AssembleCsWin32InputPaths" BeforeTargets="GenerateMSBuildEditorConfigFileCore">
    <!-- Roslyn only allows source generators to see msbuild properties, to lift msbuild items into semicolon-delimited properties. -->
    <PropertyGroup>
      <CsWin32InputMetadataPaths>@(ProjectionMetadataWinmd->'%(FullPath)','|')</CsWin32InputMetadataPaths>
      <CsWin32InputDocPaths>@(ProjectionDocs->'%(FullPath)','|')</CsWin32InputDocPaths>
      <CsWin32AppLocalAllowedLibraries>@(AppLocalAllowedLibraries->'%(FullPath)','|')</CsWin32AppLocalAllowedLibraries>
    </PropertyGroup>
  </Target>

  <PropertyGroup>
    <CoreCompileDependsOn>$(CoreCompileDependsOn);GenerateCsWin32Code</CoreCompileDependsOn>
  </PropertyGroup>

  <Target
    Name="PrepareToGenerateCsWin32Code"
    BeforeTargets="GenerateCsWin32Code"
    Condition="'$(CsWin32RunAsBuildTask)'=='true'">
    <PropertyGroup>
      <CsWin32GeneratorGeneratedFilesPath>$(IntermediateOutputPath)Generated\CsWin32\</CsWin32GeneratorGeneratedFilesPath>
      <CsWin32GeneratorGeneratedFilesList>$(IntermediateOutputPath)Generated\CsWin32\CsWin32GeneratedFiles.txt</CsWin32GeneratorGeneratedFilesList>
      <CsWin32GeneratorToolPath Condition="'$(CsWin32GeneratorToolPath)'==''">$(MSBuildThisFileDirectory)tools\</CsWin32GeneratorToolPath>
    </PropertyGroup>

    <ItemGroup>
      <CsWin32GeneratorInputs Include="$(CsWin32GeneratorToolPath)\CsWin32Generator.dll"/>
      <CsWin32GeneratorInputs Include="$(CsWin32GeneratorToolPath)\Microsoft.Windows.CsWin32.dll"/>
    </ItemGroup>

    <!-- If the GeneratedFiles.txt file exists, add all the previously written files to the outputs list so that
         if any of them don't exist or are out of date then the GenerateCsWin32Code target will re-run. -->
    <ReadLinesFromFile
      File="$(CsWin32GeneratorGeneratedFilesList)"
      Condition="Exists('$(CsWin32GeneratorGeneratedFilesList)')">
      <Output TaskParameter="Lines" ItemName="CsWin32GeneratorPreviousOutputs" />
    </ReadLinesFromFile>
  </Target>

  <Target Name="GenerateCsWin32Code"
          Inputs="@(AdditionalFiles);@(ProjectionMetadataWinmd);@(ProjectionDocs);@(CsWin32AppLocalAllowedLibraries);@(ReferencePath);@(CsWin32GeneratorInputs)"
          Outputs="$(CsWin32GeneratorGeneratedFilesList);@(CsWin32GeneratorPreviousOutputs);$(CsWin32GeneratorSucceededMarker)"
          Condition="'$(CsWin32RunAsBuildTask)'=='true' and '@(ProjectionMetadataWinmd)'!=''">
    <ItemGroup>
      <CsWin32NativeMethodsTxt Include="%(AdditionalFiles.FullPath)" Condition="'%(FileName)%(Extension)'=='NativeMethods.txt'" />
      <CsWin32NativeMethodsJson Include="%(AdditionalFiles.FullPath)" Condition="'%(FileName)%(Extension)'=='NativeMethods.json'" />
    </ItemGroup>

    <PropertyGroup>
      <CsWin32MetadataPaths>@(ProjectionMetadataWinmd)</CsWin32MetadataPaths>
      <CsWin32ContinueOnError>false</CsWin32ContinueOnError>
      <CsWin32ContinueOnError Condition="'$(DesignTimeBuild)'=='true'">ErrorAndContinue</CsWin32ContinueOnError>
    </PropertyGroup>

    <CsWin32CodeGeneratorTask
      AssemblyName="$(AssemblyName)"
      KeyFile="$(AssemblyOriginatorKeyFile)"
      NativeMethodsTxt="@(CsWin32NativeMethodsTxt)"
      NativeMethodsJson="@(CsWin32NativeMethodsJson)"
      MetadataPaths="$(CsWin32MetadataPaths)"
      DocPaths="@(ProjectionDocs)"
      AppLocalAllowedLibraries="@(CsWin32AppLocalAllowedLibraries)"
      OutputPath="$(CsWin32GeneratorGeneratedFilesPath)"
      GeneratorToolPath="$(CsWin32GeneratorToolPath)CsWin32Generator.dll"
      TargetFramework="$(TargetFramework)"
      Platform="$(PlatformTarget)"
      LangVersion="$(LangVersion)"
      References="@(ReferencePath)"
      ContinueOnError="$(CsWin32ContinueOnError)"
      Condition="@(CsWin32NativeMethodsTxt->Count()) > 0">
      <Output TaskParameter="GeneratedFiles" ItemName="CsWin32GeneratedFiles" />
      <Output TaskParameter="Succeeded" PropertyName="CsWin32GeneratorSuccess" />
    </CsWin32CodeGeneratorTask>
  </Target>

  <Target
    Name="AddGeneratedCsWin32FilesToCompile"
    AfterTargets="GenerateCsWin32Code"
    Condition="'$(CsWin32RunAsBuildTask)'=='true'">
    
    <ReadLinesFromFile
      File="$(CsWin32GeneratorGeneratedFilesList)"
      Condition="Exists('$(CsWin32GeneratorGeneratedFilesList)')">
      <Output TaskParameter="Lines" ItemName="CsWin32GeneratorOutputs" />
    </ReadLinesFromFile>

    <ItemGroup>
      <Compile Include="@(CsWin32GeneratorOutputs)" />

      <FileWrites Include="@(CsWin32GeneratorOutputs)" />
      <FileWrites Include="$(CsWin32GeneratorGeneratedFilesList)" Condition="Exists('$(CsWin32GeneratorGeneratedFilesList)')" />
    </ItemGroup>
  </Target>
</Project>
