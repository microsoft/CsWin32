trigger: none # We only want to trigger manually or based on resources
pr: none

# Source archival requirements come from a compliance tenet. Review a sample task here: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1550985
# Source code should be archived within 30 days of the release date, and at least every quarter if your product is releasing more than once every 6 months.
# If your sources on GitHub are public open source project, then using GitHub Public Archive is sufficient.
schedules:
- cron: "13 13 13 */3 *" # Every three months
  displayName: Periodic source archival
  branches:
    include:
    - main

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

parameters:
- name: notes
  displayName: Notes to include in the SCA request
  type: string
  default: ' ' # optional parameters require a non-empty default.
- name: whatif
  displayName: Only simulate the request
  type: boolean
  default: false

variables:
- group: VS Core team # Expected to provide ManagerAlias, SourceCodeArchivalUri
- template: GlobalVariables.yml

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    settings:
      networkIsolationPolicy: Permissive,CFSClean
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES

    stages:
    - stage: archive
      jobs:
      - job: archive
        pool:
          name: AzurePipelines-EO
          demands:
          - ImageOverride -equals 1ESPT-Ubuntu22.04
          os: Linux

        steps:
        - checkout: self
          clean: true
          fetchDepth: 0
        - powershell: tools/Install-DotNetSdk.ps1
          displayName: ⚙ Install .NET SDK
        - task: NuGetAuthenticate@1
          displayName: 🔏 Authenticate NuGet feeds
          inputs:
            forceReinstallCredentialProvider: true
        - script: dotnet tool restore
          displayName: ⚙️ Restore CLI tools
        - powershell: tools/variables/_define.ps1
          failOnStderr: true
          displayName: ⚙ Set pipeline variables based on source
        - task: AzureCLI@2
          displayName: 🔏 Authenticate with WIF service connection
          inputs:
            azureSubscription: VS Core Source Code Archival
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              $accessToken = az account get-access-token --query accessToken --resource api://177cf50a-4bf5-4481-8b7e-f32900dfc8e6 -o tsv
              Write-Host "##vso[task.setvariable variable=scaToken;issecret=true]$accessToken"
        - pwsh: >
            $TeamAlias = '$(TeamEmail)'.Substring(0, '$(TeamEmail)'.IndexOf('@'))

            azure-pipelines/Archive-SourceCode.ps1
            -ManagerAlias '$(ManagerAlias)'
            -TeamAlias $TeamAlias
            -BusinessGroupName '$(BusinessGroupName)'
            -ProductName '$(SymbolsFeatureName)'
            -ProductLanguage English
            -Notes '${{ parameters.notes }}'
            -AccessToken '$(scaToken)'
            -Verbose
            -WhatIf:$${{ parameters.whatif }}
          displayName: 🗃️ Submit archival request
