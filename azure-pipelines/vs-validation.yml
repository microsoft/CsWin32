# This is a top-level pipeline file, which is designed to be added as an optional PR build policy
# so that a VS insertion and all the validation that entails can be done before ever merging the PR
# in its original repo.

trigger: none # We only want to trigger manually or based on resources
pr: none

# parameters:
# - name: ShouldSkipOptimize # Uncomment this and references to it below when setting EnableOptProf to true in build.yml.
#   displayName: Skip OptProf optimization
#   type: boolean
#   default: false

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

variables:
- template: GlobalVariables.yml
- name: MicroBuild_NuPkgSigningEnabled
  value: false # test-signed nuget packages fail to restore in the VS insertion PR validations. Just don't sign them *at all*.

extends:
  template: azure-pipelines/MicroBuild.1ES.Unofficial.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
      credscan:
        enabled: false

    stages:
    - stage: Build
      variables:
      - template: /azure-pipelines/BuildStageVariables.yml@self
      - name: SkipCodesignVerify
        value: true

      jobs:
      - template: /azure-pipelines/build.yml@self
        parameters:
          Is1ESPT: true
          RealSign: false
          # ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}
          windowsPool: VSEngSS-MicroBuild2022-1ES
          linuxPool:
            name: AzurePipelines-EO
            demands:
            - ImageOverride -equals 1ESPT-Ubuntu22.04
            os: Linux
          macOSPool:
            name: Azure Pipelines
            vmImage: macOS-14
            os: macOS
          EnableMacOSBuild: false
          RunTests: false
          SkipCodesignVerify: true

    - template: /azure-pipelines/prepare-insertion-stages.yml@self
      parameters:
        ArchiveSymbols: false
        RealSign: false

    - stage: insertion
      displayName: VS insertion
      jobs:
      - job: insertion
        displayName: VS insertion
        pool: VSEngSS-MicroBuild2022-1ES
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
        - download: current
          artifact: Variables-Windows
          displayName: üîª Download Variables-Windows artifact
        - powershell: $(Pipeline.Workspace)/Variables-Windows/_define.ps1
          displayName: ‚öôÔ∏è Set pipeline variables based on artifacts
        - download: current
          artifact: VSInsertion-Windows
          displayName: üîª Download VSInsertion-Windows artifact
        - ${{ if eq(variables['ContainsVsix'], 'true') }}:
          - task: 1ES.MicroBuildVstsDrop@1
            displayName: üî∫ Upload VSTS Drop
            inputs:
              dropFolder: $(Pipeline.Workspace)/VSInsertion-windows/Vsix
              dropName: $(VstsDropNames)
              accessToken: $(System.AccessToken)
        - task: 1ES.PublishNuget@1
          displayName: üì¶ Push VS-repo packages to VS feed
          inputs:
            packagesToPush: '$(Pipeline.Workspace)/VSInsertion-Windows/*.nupkg'
            packageParentPath: $(Pipeline.Workspace)/VSInsertion-Windows
            allowPackageConflicts: true
            publishVstsFeed: VS
        - task: MicroBuildInsertVsPayload@5
          displayName: üè≠ Insert VS Payload
          inputs:
            TeamName: $(TeamName)
            TeamEmail: $(TeamEmail)
            InsertionPayloadName: $(Build.Repository.Name) VALIDATION BUILD $(Build.BuildNumber) ($(Build.SourceBranch)) [Skip-SymbolCheck] [Skip-HashCheck] [Skip-SignCheck]
            InsertionDescription: |
              This PR is for **validation purposes only** for !$(System.PullRequest.PullRequestId). **Do not complete**.
            CustomScriptExecutionCommand: src/VSSDK/NuGet/AllowUnstablePackages.ps1
            InsertionBuildPolicies: Request Perf DDRITs
            InsertionReviewers: $(Build.RequestedFor)
            DraftPR: false # set to true and update InsertionBuildPolicy when we can specify all the validations we want to run (https://dev.azure.com/devdiv/DevDiv/_workitems/edit/2224288)
            AutoCompletePR: false
            ShallowClone: true
        - powershell: |
            $insertionPRId = azure-pipelines/Get-InsertionPRId.ps1
            $Markdown = @"
            Validation insertion pull request created: !$insertionPRId
            Please check status there before proceeding to merge this PR.
            Remember to Abandon and (if allowed) to Delete Source Branch on that insertion PR when validation is complete.
            "@
            azure-pipelines/PostPRMessage.ps1 -AccessToken '$(System.AccessToken)' -Markdown $Markdown -Verbose
          displayName: ‚úèÔ∏è Comment on pull request
          condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
